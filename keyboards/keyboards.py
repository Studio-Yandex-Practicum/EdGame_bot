from aiogram.types import (
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    KeyboardButton,
    ReplyKeyboardMarkup,
)

from lexicon.lexicon import BUTTONS


# –§—É–Ω–∫—Ü–∏—è, –≥–µ–Ω–µ—Ä–∏—Ä—É—é—â–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
def create_welcome_keyboard():
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
    rus_lang: InlineKeyboardButton = InlineKeyboardButton(
        text="–†—É—Å—Å–∫–∏–π —è–∑—ã–∫", callback_data="ru_pressed"
    )
    tatar_lang: InlineKeyboardButton = InlineKeyboardButton(
        text="–¢–∞—Ç–∞—Ä —Ç–µ–ª–µ", callback_data="tt_pressed"
    )
    eng_lang: InlineKeyboardButton = InlineKeyboardButton(
        text="English language", callback_data="en_pressed"
    )
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    welcome_keyboard: InlineKeyboardMarkup = InlineKeyboardMarkup(
        inline_keyboard=[[rus_lang], [tatar_lang], [eng_lang]]
    )
    return welcome_keyboard


# –¢–µ–∫—Å—Ç –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö
# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def menu_keyboard(language):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é."""
    buttons = BUTTONS[language]
    write_to_methodist = KeyboardButton(text=buttons["write_to_methodist"])
    lk = KeyboardButton(text=buttons["lk"])
    help_button = KeyboardButton(text=buttons["help"])

    keyboard = [[lk], [help_button], [write_to_methodist]]
    return keyboard


# –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
def profile_keyboard(language):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ."""
    buttons = BUTTONS[language]
    edit_profile = KeyboardButton(text=buttons["edit_profile"])
    available_achievements = KeyboardButton(
        text=buttons["available_achievements"]
    )
    current_achievements = KeyboardButton(text=buttons["current_achievements"])
    reviewed_achievements = KeyboardButton(
        text=buttons["reviewed_achievements"]
    )
    write_to_councelor = KeyboardButton(text=buttons["write_to_councelor"])
    help_button = KeyboardButton(text=buttons["help"])
    keyboard = [
        [available_achievements, current_achievements],
        [reviewed_achievements],
        [edit_profile],
        [help_button, write_to_councelor],
    ]
    return keyboard


# –ö–Ω–æ–ø–∫–∏ inline

# –í—ã–±–æ—Ä —è–∑—ã–∫–∞
russian = InlineKeyboardButton(text="–†—É—Å—Å–∫–∏–π —è–∑—ã–∫", callback_data="RU")
tatar = InlineKeyboardButton(text="–¢–∞—Ç–∞—Ä —Ç–µ–ª–µ", callback_data="TT")
english = InlineKeyboardButton(text="English language", callback_data="EN")

choose_language_keyboard = [[russian], [tatar], [english]]


# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
def edit_profile_keyboard(language: str):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è."""
    buttons = BUTTONS[language]
    change_firstname = InlineKeyboardButton(
        text=buttons["change_firstname"], callback_data="change_name"
    )
    change_language = InlineKeyboardButton(
        text=buttons["change_language"], callback_data="change_language"
    )

    keyboard = [[change_firstname], [change_language]]
    return keyboard


# –°–ø–∏—Å–æ–∫ –∞—á–∏–≤–æ–∫
def task_list_keyboard(buttons_count: int, start: int = 0, end: int = 5):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–Ω–æ–ø–æ–∫ —Å –Ω–æ–º–µ—Ä–∞–º–∏ –∞—á–∏–≤–æ–∫."""
    keyboard = []
    buttons = []
    nav_buttons = []
    button_next = InlineKeyboardButton(text=">>", callback_data="next")
    button_prev = InlineKeyboardButton(text="<<", callback_data="previous")
    info_button = InlineKeyboardButton(
        text=f"{end}/{buttons_count}", callback_data="info"
    )
    for i in range(buttons_count):
        buttons.append(
            InlineKeyboardButton(text=f"{i + 1}", callback_data=f"{i + 1}")
        )
    keyboard.append(buttons[start:end])
    if start > 0 and buttons_count > end:
        nav_buttons.append(button_prev)
        nav_buttons.append(info_button)
        nav_buttons.append(button_next)
    elif buttons_count > end:
        nav_buttons.append(info_button)
        nav_buttons.append(button_next)
    elif start > 0:
        nav_buttons.append(button_prev)
        nav_buttons.append(info_button)
    if nav_buttons:
        keyboard.append(nav_buttons)
    return keyboard


# –û—Ç–¥–µ–ª—å–Ω–∞—è –∞—á–∏–≤–∫–∞
def task_keyboard(language: str):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∞—á–∏–≤–∫–µ."""
    buttons = BUTTONS[language]
    lk = InlineKeyboardButton(text=buttons["lk"], callback_data="profile")
    available_achievements = InlineKeyboardButton(
        text=buttons["available_achievements"],
        callback_data="available_achievements",
    )

    keyboard = [[available_achievements], [lk]]
    return keyboard


# –ù–∞–ø–∏—Å–∞—Ç—å –≤–æ–∂–∞—Ç–æ–º—É
def contacts_keyboard(language, username):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å–≤—è–∑–∏ —Å –≤–æ–∂–∞—Ç—ã–º."""
    buttons = BUTTONS[language]
    councelor_chat = InlineKeyboardButton(
        text=buttons["councelor_chat"], url=f"https://t.me/{username}"
    )
    lk = InlineKeyboardButton(text=buttons["lk"], callback_data="profile")

    keyboard = [[councelor_chat], [lk]]
    return keyboard


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
def help_keyboard(language):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–æ–º–∞–Ω–¥—ã help."""
    buttons = BUTTONS[language]
    lk = InlineKeyboardButton(text=buttons["lk"], callback_data="profile")
    keyboard = [[lk]]
    return keyboard


# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –õ–ö –≤–æ–∂–∞—Ç–æ–≥–æ
def create_profile_keyboard():
    profile_keyboard = [
        [KeyboardButton(text="–°–ø–∏—Å–æ–∫ –¥–µ—Ç–µ–π")],
        [KeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–¥–∞–Ω–∏—è")],
    ]
    return ReplyKeyboardMarkup(keyboard=profile_keyboard, resize_keyboard=True)


# –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–¥–∞–Ω–∏—è –≤–æ–∂–∞—Ç—ã–º
def create_inline_keyboard(task_id):
    accept_button = InlineKeyboardButton(
        text="‚úîÔ∏è –ü—Ä–∏–Ω—è—Ç—å", callback_data=f"accept:{task_id}"
    )

    reject_button = InlineKeyboardButton(
        text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject:{task_id}"
    )
    send_back_button = InlineKeyboardButton(
        text="üîÑ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –¥–æ–ø.–ø—Ä–æ–≤–µ—Ä–∫—É", callback_data=f"back:{task_id}"
    )
    return InlineKeyboardMarkup(
        inline_keyboard=[[accept_button], [reject_button], [send_back_button]]
    )


# –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –ø—Ä–∏ –æ—Ç–∫–æ–ª–µ–Ω–∏–∏ –≤–æ–∂–∞—Ç—ã–º –¥–∑
def create_yes_no_keyboard(task_id):
    yes_button = InlineKeyboardButton(
        text="–î–∞", callback_data=f"yes:{task_id}"
    )
    no_button = InlineKeyboardButton(text="–ù–µ—Ç", callback_data=f"no:{task_id}")
    return InlineKeyboardMarkup(inline_keyboard=[[yes_button], [no_button]])
