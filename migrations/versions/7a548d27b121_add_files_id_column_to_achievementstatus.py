"""Add files_id column to AchievementStatus

Revision ID: 7a548d27b121
Revises: 0b1d97a3195a
Create Date: 2023-08-18 14:14:02.734731

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7a548d27b121'
down_revision: Union[str, None] = '0b1d97a3195a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('artifacts')
    op.alter_column('achievements', 'price',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint('users_login_key', 'users', type_='unique')
    op.drop_column('users', 'password')
    op.drop_column('users', 'login')
    op.add_column('users_achievements', sa.Column('files_id', sa.ARRAY(sa.String()), nullable=True))
    op.add_column('users_achievements', sa.Column('message_text', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users_achievements', 'message_text')
    op.drop_column('users_achievements', 'files_id')
    op.add_column('users', sa.Column('login', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('password', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.create_unique_constraint('users_login_key', 'users', ['login'])
    op.alter_column('achievements', 'price',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_table('artifacts',
    sa.Column('artifact_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_achievement_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('content', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('artifact_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_achievement_id'], ['users_achievements.user_achievement_id'], name='artifacts_user_achievement_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('artifact_id', name='artifacts_pkey')
    )
    # ### end Alembic commands ###
